#!/usr/bin/env ruby

require 'nokogiri'
require 'optparse'
require 'fileutils'

options = {}
OP = OptionParser.new do |opts|
  opts.banner = 'Usage: kirinuki.rb [options]'
  opts.separator ''
  opts.separator "Example: ruby kirinuki.rb -f 'path/to/your.html' -p '//*[@id=\"sec数\"]' -r '1..12'"
  opts.on('-f', '--file HTML_PATH', 'HTML file path') { |v| options[:file] = v }
  opts.on('-p', '--pattern PATTERN', 'Pattern') { |v| options[:pattern] = v }
  opts.on('-r', '--range RANGE', 'Range') { |v| options[:range] = v }
  opts.on('-o', '--output OUTPUT_DIR', 'Output directory') { |v| options[:output] = v }
end

def show_help_and_quit
  warn(OP)
  exit 1
end

begin
  OP.parse!
rescue StandardError
  show_help_and_quit
end

html_path = options[:file] || show_help_and_quit
pattern = options[:pattern] || show_help_and_quit
raise 'No 数 found. Please check the pattern.' unless pattern.include? '数'

range_str = options[:range] || show_help_and_quit
output_dir = options[:output] || File.basename(html_path, '.*')

doc = Nokogiri::HTML(open(html_path))

range = eval(range_str)
range.each do |i|
  xpath = pattern.gsub('数', i.to_s)
  nodes = doc.xpath(xpath)

  # 各ノードを処理
  nodes.each do |node|
    html = node.inner_html
    html.gsub!(/\R|\t/, ' ') # remove any existing newlines or tabs
    html.gsub!(/<(h[1-6]|p|li|dd)/, "\n\\0") # add a newline before each heading and paragraph
    html.gsub!(%r{</(h[1-6]|p|li|dd)>}, "\\0\n") # add a newline after each ending heading and paragraph tag
    text = Nokogiri::HTML(html).text # convert back to text, which removes the HTML tags

    file_name = xpath.gsub(/[^0-9A-Za-z_]/, '')
    FileUtils.mkdir_p(output_dir)
    File.open("#{output_dir}/#{file_name}.txt", 'a') do |f| # 指定されたディレクトリにファイルを保存
      f.puts text
    end
  end
end
